--lpm_mult CBX_DECLARE_ALL_CONNECTED_PORTS="OFF" DEVICE_FAMILY="Cyclone IV E" DSP_BLOCK_BALANCING="Auto" INPUT_A_IS_CONSTANT="NO" INPUT_B_IS_CONSTANT="NO" LPM_REPRESENTATION="UNSIGNED" LPM_WIDTHA=41 LPM_WIDTHB=64 LPM_WIDTHP=105 LPM_WIDTHS=1 MAXIMIZE_SPEED=5 dataa datab result CARRY_CHAIN="MANUAL" CARRY_CHAIN_LENGTH=48
--VERSION_BEGIN 18.0 cbx_cycloneii 2018:04:24:18:04:18:SJ cbx_lpm_add_sub 2018:04:24:18:04:18:SJ cbx_lpm_mult 2018:04:24:18:04:18:SJ cbx_mgl 2018:04:24:18:08:49:SJ cbx_nadder 2018:04:24:18:04:18:SJ cbx_padd 2018:04:24:18:04:18:SJ cbx_stratix 2018:04:24:18:04:18:SJ cbx_stratixii 2018:04:24:18:04:18:SJ cbx_util_mgl 2018:04:24:18:04:18:SJ  VERSION_END


-- Copyright (C) 2018  Intel Corporation. All rights reserved.
--  Your use of Intel Corporation's design tools, logic functions 
--  and other software and tools, and its AMPP partner logic 
--  functions, and any output files from any of the foregoing 
--  (including device programming or simulation files), and any 
--  associated documentation or information are expressly subject 
--  to the terms and conditions of the Intel Program License 
--  Subscription Agreement, the Intel Quartus Prime License Agreement,
--  the Intel FPGA IP License Agreement, or other applicable license
--  agreement, including, without limitation, that your use is for
--  the sole purpose of programming logic devices manufactured by
--  Intel and sold by Intel or its authorized distributors.  Please
--  refer to the applicable agreement for further details.


FUNCTION cycloneive_mac_mult (aclr, clk, dataa[dataa_width-1..0], datab[datab_width-1..0], ena, signa, signb)
WITH ( dataa_clock, dataa_width, datab_clock, datab_width, signa_clock, signb_clock)
RETURNS ( dataout[dataa_width+datab_width-1..0]);
FUNCTION cycloneive_mac_out (aclr, clk, dataa[dataa_width-1..0], ena)
WITH ( dataa_width = 0, output_clock)
RETURNS ( dataout[dataa_width-1..0]);
FUNCTION soft (in)
RETURNS ( out);

--synthesis_resources = dsp_9bit 24 lut 302 
SUBDESIGN mult_oet
( 
	dataa[40..0]	:	input;
	datab[63..0]	:	input;
	result[104..0]	:	output;
) 
VARIABLE
	add25_result[82..0]	:	WIRE;
	add29_result[87..0]	:	WIRE;
	add33_result[46..0]	:	WIRE;
	add37_result[59..0]	:	WIRE;
	add41_result[23..0]	:	WIRE;
	mac_mult1 : cycloneive_mac_mult
		WITH (
			dataa_clock = "none",
			dataa_width = 18,
			datab_clock = "none",
			datab_width = 18,
			signa_clock = "none",
			signb_clock = "none"
		);
	mac_mult11 : cycloneive_mac_mult
		WITH (
			dataa_clock = "none",
			dataa_width = 18,
			datab_clock = "none",
			datab_width = 18,
			signa_clock = "none",
			signb_clock = "none"
		);
	mac_mult13 : cycloneive_mac_mult
		WITH (
			dataa_clock = "none",
			dataa_width = 18,
			datab_clock = "none",
			datab_width = 18,
			signa_clock = "none",
			signb_clock = "none"
		);
	mac_mult15 : cycloneive_mac_mult
		WITH (
			dataa_clock = "none",
			dataa_width = 18,
			datab_clock = "none",
			datab_width = 10,
			signa_clock = "none",
			signb_clock = "none"
		);
	mac_mult17 : cycloneive_mac_mult
		WITH (
			dataa_clock = "none",
			dataa_width = 5,
			datab_clock = "none",
			datab_width = 18,
			signa_clock = "none",
			signb_clock = "none"
		);
	mac_mult19 : cycloneive_mac_mult
		WITH (
			dataa_clock = "none",
			dataa_width = 5,
			datab_clock = "none",
			datab_width = 18,
			signa_clock = "none",
			signb_clock = "none"
		);
	mac_mult21 : cycloneive_mac_mult
		WITH (
			dataa_clock = "none",
			dataa_width = 5,
			datab_clock = "none",
			datab_width = 18,
			signa_clock = "none",
			signb_clock = "none"
		);
	mac_mult23 : cycloneive_mac_mult
		WITH (
			dataa_clock = "none",
			dataa_width = 5,
			datab_clock = "none",
			datab_width = 10,
			signa_clock = "none",
			signb_clock = "none"
		);
	mac_mult3 : cycloneive_mac_mult
		WITH (
			dataa_clock = "none",
			dataa_width = 18,
			datab_clock = "none",
			datab_width = 18,
			signa_clock = "none",
			signb_clock = "none"
		);
	mac_mult5 : cycloneive_mac_mult
		WITH (
			dataa_clock = "none",
			dataa_width = 18,
			datab_clock = "none",
			datab_width = 18,
			signa_clock = "none",
			signb_clock = "none"
		);
	mac_mult7 : cycloneive_mac_mult
		WITH (
			dataa_clock = "none",
			dataa_width = 18,
			datab_clock = "none",
			datab_width = 10,
			signa_clock = "none",
			signb_clock = "none"
		);
	mac_mult9 : cycloneive_mac_mult
		WITH (
			dataa_clock = "none",
			dataa_width = 18,
			datab_clock = "none",
			datab_width = 18,
			signa_clock = "none",
			signb_clock = "none"
		);
	mac_out10 : cycloneive_mac_out
		WITH (
			dataa_width = 36,
			output_clock = "none"
		);
	mac_out12 : cycloneive_mac_out
		WITH (
			dataa_width = 36,
			output_clock = "none"
		);
	mac_out14 : cycloneive_mac_out
		WITH (
			dataa_width = 36,
			output_clock = "none"
		);
	mac_out16 : cycloneive_mac_out
		WITH (
			dataa_width = 28,
			output_clock = "none"
		);
	mac_out18 : cycloneive_mac_out
		WITH (
			dataa_width = 23,
			output_clock = "none"
		);
	mac_out2 : cycloneive_mac_out
		WITH (
			dataa_width = 36,
			output_clock = "none"
		);
	mac_out20 : cycloneive_mac_out
		WITH (
			dataa_width = 23,
			output_clock = "none"
		);
	mac_out22 : cycloneive_mac_out
		WITH (
			dataa_width = 23,
			output_clock = "none"
		);
	mac_out24 : cycloneive_mac_out
		WITH (
			dataa_width = 15,
			output_clock = "none"
		);
	mac_out4 : cycloneive_mac_out
		WITH (
			dataa_width = 36,
			output_clock = "none"
		);
	mac_out6 : cycloneive_mac_out
		WITH (
			dataa_width = 36,
			output_clock = "none"
		);
	mac_out8 : cycloneive_mac_out
		WITH (
			dataa_width = 28,
			output_clock = "none"
		);
	sft26a[82..0] : soft;
	sft27a[82..0] : soft;
	sft28a[82..0] : soft;
	sft30a[87..0] : soft;
	sft31a[87..0] : soft;
	sft32a[87..0] : soft;
	sft34a[46..0] : soft;
	sft35a[46..0] : soft;
	sft36a[46..0] : soft;
	sft38a[59..0] : soft;
	sft39a[59..0] : soft;
	sft40a[59..0] : soft;
	sft42a[23..0] : soft;
	sft43a[23..0] : soft;
	sft44a[23..0] : soft;
	w1680w[105..0]	: WIRE;
	w756w	: WIRE;

BEGIN 
	add25_result[] = sft26a[].out + sft27a[].out;
	add29_result[] = sft30a[].out + sft31a[].out;
	add33_result[] = sft34a[].out + sft35a[].out;
	add37_result[] = sft38a[].out + sft39a[].out;
	add41_result[] = sft42a[].out + sft43a[].out;
	mac_mult1.dataa[] = ( dataa[17..0]);
	mac_mult1.datab[] = ( datab[17..0]);
	mac_mult1.signa = B"0";
	mac_mult1.signb = B"0";
	mac_mult11.dataa[] = ( dataa[35..18]);
	mac_mult11.datab[] = ( datab[35..18]);
	mac_mult11.signa = B"0";
	mac_mult11.signb = B"0";
	mac_mult13.dataa[] = ( dataa[35..18]);
	mac_mult13.datab[] = ( datab[53..36]);
	mac_mult13.signa = B"0";
	mac_mult13.signb = B"0";
	mac_mult15.dataa[] = ( dataa[35..18]);
	mac_mult15.datab[] = ( datab[63..54]);
	mac_mult15.signa = B"0";
	mac_mult15.signb = B"0";
	mac_mult17.dataa[] = ( dataa[40..36]);
	mac_mult17.datab[] = ( datab[17..0]);
	mac_mult17.signa = B"0";
	mac_mult17.signb = B"0";
	mac_mult19.dataa[] = ( dataa[40..36]);
	mac_mult19.datab[] = ( datab[35..18]);
	mac_mult19.signa = B"0";
	mac_mult19.signb = B"0";
	mac_mult21.dataa[] = ( dataa[40..36]);
	mac_mult21.datab[] = ( datab[53..36]);
	mac_mult21.signa = B"0";
	mac_mult21.signb = B"0";
	mac_mult23.dataa[] = ( dataa[40..36]);
	mac_mult23.datab[] = ( datab[63..54]);
	mac_mult23.signa = B"0";
	mac_mult23.signb = B"0";
	mac_mult3.dataa[] = ( dataa[17..0]);
	mac_mult3.datab[] = ( datab[35..18]);
	mac_mult3.signa = B"0";
	mac_mult3.signb = B"0";
	mac_mult5.dataa[] = ( dataa[17..0]);
	mac_mult5.datab[] = ( datab[53..36]);
	mac_mult5.signa = B"0";
	mac_mult5.signb = B"0";
	mac_mult7.dataa[] = ( dataa[17..0]);
	mac_mult7.datab[] = ( datab[63..54]);
	mac_mult7.signa = B"0";
	mac_mult7.signb = B"0";
	mac_mult9.dataa[] = ( dataa[35..18]);
	mac_mult9.datab[] = ( datab[17..0]);
	mac_mult9.signa = B"0";
	mac_mult9.signb = B"0";
	mac_out10.dataa[] = mac_mult9.dataout[];
	mac_out12.dataa[] = mac_mult11.dataout[];
	mac_out14.dataa[] = mac_mult13.dataout[];
	mac_out16.dataa[] = mac_mult15.dataout[];
	mac_out18.dataa[] = mac_mult17.dataout[];
	mac_out2.dataa[] = mac_mult1.dataout[];
	mac_out20.dataa[] = mac_mult19.dataout[];
	mac_out22.dataa[] = mac_mult21.dataout[];
	mac_out24.dataa[] = mac_mult23.dataout[];
	mac_out4.dataa[] = mac_mult3.dataout[];
	mac_out6.dataa[] = mac_mult5.dataout[];
	mac_out8.dataa[] = mac_mult7.dataout[];
	sft26a[].in = ( w756w, ( mac_out16.dataout[27..27], ( mac_out16.dataout[26..26], ( mac_out16.dataout[25..25], ( mac_out16.dataout[24..24], ( mac_out16.dataout[23..23], ( mac_out24.dataout[4..4], ( mac_out24.dataout[3..3], ( mac_out24.dataout[2..2], ( mac_out24.dataout[1..1], ( mac_out24.dataout[0..0], ( mac_out22.dataout[17..17], ( mac_out22.dataout[16..16], ( mac_out22.dataout[15..15], ( mac_out22.dataout[14..14], ( mac_out22.dataout[13..13], ( mac_out22.dataout[12..12], ( mac_out22.dataout[11..11], ( mac_out22.dataout[10..10], ( mac_out14.dataout[27..27], ( mac_out14.dataout[26..26], ( mac_out14.dataout[25..25], ( mac_out14.dataout[24..24], ( mac_out8.dataout[23..23], ( mac_out16.dataout[4..4], ( mac_out16.dataout[3..3], ( mac_out16.dataout[2..2], ( mac_out16.dataout[1..1], ( mac_out16.dataout[0..0], ( mac_out12.dataout[35..35], ( mac_out12.dataout[34..34], ( mac_out12.dataout[33..33], ( mac_out12.dataout[32..32], ( mac_out12.dataout[31..31], ( mac_out12.dataout[30..30], ( mac_out12.dataout[29..29], ( mac_out12.dataout[28..28], ( mac_out12.dataout[27..27], ( mac_out12.dataout[26..26], ( mac_out12.dataout[25..25], ( mac_out12.dataout[24..24], ( mac_out12.dataout[23..23], ( mac_out12.dataout[22..22], ( mac_out12.dataout[21..21], ( mac_out12.dataout[20..20], ( mac_out12.dataout[19..19], ( mac_out12.dataout[18..18], ( mac_out10.dataout[35..35], ( mac_out10.dataout[34..34], ( mac_out10.dataout[33..33], ( mac_out10.dataout[32..32], ( mac_out10.dataout[31..31], ( mac_out10.dataout[30..30], ( mac_out10.dataout[29..29], ( mac_out10.dataout[28..28], ( mac_out10.dataout[27..27], ( mac_out10.dataout[26..26], ( mac_out10.dataout[25..25], ( mac_out10.dataout[24..24], ( mac_out10.dataout[23..23], ( mac_out10.dataout[22..22], ( mac_out10.dataout[21..21], ( mac_out10.dataout[20..20], ( mac_out10.dataout[19..19], ( mac_out10.dataout[18..18], ( mac_out10.dataout[17..17], ( mac_out10.dataout[16..16], ( mac_out10.dataout[15..15], ( mac_out10.dataout[14..14], ( mac_out10.dataout[13..13], ( mac_out10.dataout[12..12], ( mac_out10.dataout[11..11], ( mac_out10.dataout[10..10], ( mac_out10.dataout[9..9], ( mac_out10.dataout[8..8], ( mac_out10.dataout[7..7], ( mac_out10.dataout[6..6], ( mac_out10.dataout[5..5], ( mac_out10.dataout[4..4], ( mac_out10.dataout[3..3], ( mac_out10.dataout[2..2], ( mac_out10.dataout[1..0]))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))));
	sft27a[].in = ( w756w, ( w756w, ( w756w, ( w756w, ( w756w, ( mac_out24.dataout[5..5], ( mac_out22.dataout[22..22], ( mac_out22.dataout[21..21], ( mac_out22.dataout[20..20], ( mac_out22.dataout[19..19], ( mac_out22.dataout[18..18], ( mac_out16.dataout[17..17], ( mac_out16.dataout[16..16], ( mac_out16.dataout[15..15], ( mac_out16.dataout[14..14], ( mac_out16.dataout[13..13], ( mac_out16.dataout[12..12], ( mac_out16.dataout[11..11], ( mac_out16.dataout[10..10], ( sft36a[45..45].out, ( sft36a[44..44].out, ( sft36a[43..43].out, ( sft36a[42..42].out, ( sft36a[41..41].out, ( sft36a[40..40].out, ( sft36a[39..39].out, ( sft36a[38..38].out, ( sft36a[37..37].out, ( sft36a[36..36].out, ( sft36a[35..35].out, ( sft36a[34..34].out, ( sft36a[33..33].out, ( sft36a[32..32].out, ( sft36a[31..31].out, ( sft36a[30..30].out, ( sft36a[29..29].out, ( sft36a[28..28].out, ( sft36a[27..27].out, ( sft36a[26..26].out, ( sft36a[25..25].out, ( sft36a[24..24].out, ( sft36a[23..23].out, ( sft36a[22..22].out, ( sft36a[21..21].out, ( sft36a[20..20].out, ( sft36a[19..19].out, ( sft36a[18..18].out, ( sft36a[17..17].out, ( sft36a[16..16].out, ( sft36a[15..15].out, ( sft36a[14..14].out, ( sft36a[13..13].out, ( sft36a[12..12].out, ( sft36a[11..11].out, ( sft36a[10..10].out, ( sft36a[9..9].out, ( sft36a[8..8].out, ( sft36a[7..7].out, ( sft36a[6..6].out, ( sft36a[5..5].out, ( sft36a[4..4].out, ( sft36a[3..3].out, ( sft36a[2..2].out, ( sft36a[1..1].out, ( sft36a[0..0].out, ( mac_out4.dataout[17..17], ( mac_out4.dataout[16..16], ( mac_out4.dataout[15..15], ( mac_out4.dataout[14..14], ( mac_out4.dataout[13..13], ( mac_out4.dataout[12..12], ( mac_out4.dataout[11..11], ( mac_out4.dataout[10..10], ( mac_out4.dataout[9..9], ( mac_out4.dataout[8..8], ( mac_out4.dataout[7..7], ( mac_out4.dataout[6..6], ( mac_out4.dataout[5..5], ( mac_out4.dataout[4..4], ( mac_out4.dataout[3..3], ( mac_out4.dataout[2..2], ( mac_out4.dataout[1..0]))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))));
	sft28a[].in = add25_result[];
	sft30a[].in = ( w756w, ( mac_out24.dataout[14..14], ( mac_out24.dataout[13..13], ( mac_out24.dataout[12..12], ( mac_out24.dataout[11..11], ( mac_out24.dataout[10..10], ( mac_out24.dataout[9..9], ( mac_out24.dataout[8..8], ( mac_out24.dataout[7..7], ( mac_out24.dataout[6..6], ( sft28a[77..77].out, ( sft28a[76..76].out, ( sft28a[75..75].out, ( sft28a[74..74].out, ( sft28a[73..73].out, ( sft28a[72..72].out, ( sft28a[71..71].out, ( sft28a[70..70].out, ( sft28a[69..69].out, ( sft28a[68..68].out, ( sft28a[67..67].out, ( sft28a[66..66].out, ( sft28a[65..65].out, ( sft28a[64..64].out, ( sft28a[63..63].out, ( sft28a[62..62].out, ( sft28a[61..61].out, ( sft28a[60..60].out, ( sft28a[59..59].out, ( sft28a[58..58].out, ( sft28a[57..57].out, ( sft28a[56..56].out, ( sft28a[55..55].out, ( sft28a[54..54].out, ( sft28a[53..53].out, ( sft28a[52..52].out, ( sft28a[51..51].out, ( sft28a[50..50].out, ( sft28a[49..49].out, ( sft28a[48..48].out, ( sft28a[47..47].out, ( sft28a[46..46].out, ( sft28a[45..45].out, ( sft28a[44..44].out, ( sft28a[43..43].out, ( sft28a[42..42].out, ( sft28a[41..41].out, ( sft28a[40..40].out, ( sft28a[39..39].out, ( sft28a[38..38].out, ( sft28a[37..37].out, ( sft28a[36..36].out, ( sft28a[35..35].out, ( sft28a[34..34].out, ( sft28a[33..33].out, ( sft28a[32..32].out, ( sft28a[31..31].out, ( sft28a[30..30].out, ( sft28a[29..29].out, ( sft28a[28..28].out, ( sft28a[27..27].out, ( sft28a[26..26].out, ( sft28a[25..25].out, ( sft28a[24..24].out, ( sft28a[23..23].out, ( sft28a[22..22].out, ( sft28a[21..21].out, ( sft28a[20..20].out, ( sft28a[19..19].out, ( sft28a[18..18].out, ( mac_out2.dataout[35..35], ( mac_out2.dataout[34..34], ( mac_out2.dataout[33..33], ( mac_out2.dataout[32..32], ( mac_out2.dataout[31..31], ( mac_out2.dataout[30..30], ( mac_out2.dataout[29..29], ( mac_out2.dataout[28..28], ( mac_out2.dataout[27..27], ( mac_out2.dataout[26..26], ( mac_out2.dataout[25..25], ( mac_out2.dataout[24..24], ( mac_out2.dataout[23..23], ( mac_out2.dataout[22..22], ( mac_out2.dataout[21..21], ( mac_out2.dataout[20..20], ( mac_out2.dataout[19..18])))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))));
	sft31a[].in = ( w756w, ( w756w, ( w756w, ( w756w, ( w756w, ( sft28a[82..82].out, ( sft28a[81..81].out, ( sft28a[80..80].out, ( sft28a[79..79].out, ( sft28a[78..78].out, ( sft40a[59..59].out, ( sft40a[58..58].out, ( sft40a[57..57].out, ( sft40a[56..56].out, ( sft40a[55..55].out, ( sft40a[54..54].out, ( sft40a[53..53].out, ( sft40a[52..52].out, ( sft40a[51..51].out, ( sft40a[50..50].out, ( sft40a[49..49].out, ( sft40a[48..48].out, ( sft40a[47..47].out, ( sft40a[46..46].out, ( sft40a[45..45].out, ( sft40a[44..44].out, ( sft40a[43..43].out, ( sft40a[42..42].out, ( sft40a[41..41].out, ( sft40a[40..40].out, ( sft40a[39..39].out, ( sft40a[38..38].out, ( sft40a[37..37].out, ( sft40a[36..36].out, ( sft40a[35..35].out, ( sft40a[34..34].out, ( sft40a[33..33].out, ( sft40a[32..32].out, ( sft40a[31..31].out, ( sft40a[30..30].out, ( sft40a[29..29].out, ( sft40a[28..28].out, ( sft40a[27..27].out, ( sft40a[26..26].out, ( sft40a[25..25].out, ( sft40a[24..24].out, ( sft40a[23..23].out, ( sft40a[22..22].out, ( sft40a[21..21].out, ( sft40a[20..20].out, ( sft40a[19..19].out, ( sft40a[18..18].out, ( sft40a[17..17].out, ( sft40a[16..16].out, ( sft40a[15..15].out, ( sft40a[14..14].out, ( sft40a[13..13].out, ( sft40a[12..12].out, ( sft40a[11..11].out, ( sft40a[10..10].out, ( sft40a[9..9].out, ( sft40a[8..8].out, ( sft40a[7..7].out, ( sft40a[6..6].out, ( sft40a[5..5].out, ( sft40a[4..4].out, ( sft40a[3..3].out, ( sft40a[2..2].out, ( sft40a[1..1].out, ( sft40a[0..0].out, ( sft28a[17..17].out, ( sft28a[16..16].out, ( sft28a[15..15].out, ( sft28a[14..14].out, ( sft28a[13..13].out, ( sft28a[12..12].out, ( sft28a[11..11].out, ( sft28a[10..10].out, ( sft28a[9..9].out, ( sft28a[8..8].out, ( sft28a[7..7].out, ( sft28a[6..6].out, ( sft28a[5..5].out, ( sft28a[4..4].out, ( sft28a[3..3].out, ( sft28a[2..2].out, ( sft28a[1..1].out, sft28a[0..0].out)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))));
	sft32a[].in = add29_result[];
	sft34a[].in = ( w756w, ( mac_out16.dataout[9..9], ( mac_out16.dataout[8..8], ( mac_out16.dataout[7..7], ( mac_out16.dataout[6..6], ( mac_out16.dataout[5..5], ( mac_out22.dataout[4..4], ( mac_out22.dataout[3..3], ( mac_out22.dataout[2..2], ( mac_out22.dataout[1..1], ( mac_out22.dataout[0..0], ( mac_out20.dataout[17..17], ( mac_out20.dataout[16..16], ( mac_out20.dataout[15..15], ( mac_out20.dataout[14..14], ( mac_out20.dataout[13..13], ( mac_out20.dataout[12..12], ( mac_out20.dataout[11..11], ( mac_out20.dataout[10..10], ( mac_out20.dataout[9..9], ( mac_out20.dataout[8..8], ( mac_out20.dataout[7..7], ( mac_out20.dataout[6..6], ( mac_out20.dataout[5..5], ( mac_out18.dataout[22..22], ( mac_out18.dataout[21..21], ( mac_out18.dataout[20..20], ( mac_out18.dataout[19..19], ( mac_out18.dataout[18..18], ( mac_out18.dataout[17..17], ( mac_out18.dataout[16..16], ( mac_out18.dataout[15..15], ( mac_out18.dataout[14..14], ( mac_out18.dataout[13..13], ( mac_out18.dataout[12..12], ( mac_out18.dataout[11..11], ( mac_out18.dataout[10..10], ( mac_out18.dataout[9..9], ( mac_out18.dataout[8..8], ( mac_out18.dataout[7..7], ( mac_out18.dataout[6..6], ( mac_out18.dataout[5..5], ( mac_out18.dataout[4..4], ( mac_out18.dataout[3..3], ( mac_out18.dataout[2..2], ( mac_out18.dataout[1..0]))))))))))))))))))))))))))))))))))))))))))))));
	sft35a[].in = ( w756w, ( w756w, ( w756w, ( w756w, ( w756w, ( mac_out14.dataout[23..23], ( mac_out14.dataout[22..22], ( mac_out14.dataout[21..21], ( mac_out14.dataout[20..20], ( mac_out14.dataout[19..19], ( mac_out14.dataout[18..18], ( mac_out8.dataout[17..17], ( mac_out8.dataout[16..16], ( mac_out8.dataout[15..15], ( mac_out8.dataout[14..14], ( mac_out8.dataout[13..13], ( mac_out8.dataout[12..12], ( mac_out8.dataout[11..11], ( mac_out8.dataout[10..10], ( mac_out8.dataout[9..9], ( mac_out8.dataout[8..8], ( mac_out8.dataout[7..7], ( mac_out8.dataout[6..6], ( mac_out8.dataout[5..5], ( mac_out8.dataout[4..4], ( mac_out8.dataout[3..3], ( mac_out8.dataout[2..2], ( mac_out8.dataout[1..1], ( mac_out8.dataout[0..0], ( mac_out6.dataout[17..17], ( mac_out6.dataout[16..16], ( mac_out6.dataout[15..15], ( mac_out6.dataout[14..14], ( mac_out6.dataout[13..13], ( mac_out6.dataout[12..12], ( mac_out6.dataout[11..11], ( mac_out6.dataout[10..10], ( mac_out6.dataout[9..9], ( mac_out6.dataout[8..8], ( mac_out6.dataout[7..7], ( mac_out6.dataout[6..6], ( mac_out6.dataout[5..5], ( mac_out6.dataout[4..4], ( mac_out6.dataout[3..3], ( mac_out6.dataout[2..2], ( mac_out6.dataout[1..0]))))))))))))))))))))))))))))))))))))))))))))));
	sft36a[].in = add33_result[];
	sft38a[].in = ( w756w, ( mac_out16.dataout[22..22], ( mac_out16.dataout[21..21], ( mac_out16.dataout[20..20], ( mac_out16.dataout[19..19], ( mac_out16.dataout[18..18], ( mac_out14.dataout[35..35], ( mac_out14.dataout[34..34], ( mac_out14.dataout[33..33], ( mac_out14.dataout[32..32], ( mac_out14.dataout[31..31], ( mac_out14.dataout[30..30], ( mac_out14.dataout[29..29], ( mac_out14.dataout[28..28], ( mac_out22.dataout[9..9], ( mac_out22.dataout[8..8], ( mac_out22.dataout[7..7], ( mac_out22.dataout[6..6], ( mac_out22.dataout[5..5], ( mac_out8.dataout[22..22], ( mac_out8.dataout[21..21], ( mac_out8.dataout[20..20], ( mac_out8.dataout[19..19], ( mac_out8.dataout[18..18], ( mac_out6.dataout[35..35], ( mac_out6.dataout[34..34], ( mac_out6.dataout[33..33], ( mac_out6.dataout[32..32], ( mac_out6.dataout[31..31], ( mac_out6.dataout[30..30], ( mac_out6.dataout[29..29], ( mac_out6.dataout[28..28], ( mac_out6.dataout[27..27], ( mac_out6.dataout[26..26], ( mac_out6.dataout[25..25], ( mac_out6.dataout[24..24], ( mac_out6.dataout[23..23], ( mac_out14.dataout[4..4], ( mac_out14.dataout[3..3], ( mac_out14.dataout[2..2], ( mac_out14.dataout[1..1], ( mac_out14.dataout[0..0], ( mac_out12.dataout[17..17], ( mac_out12.dataout[16..16], ( mac_out12.dataout[15..15], ( mac_out12.dataout[14..14], ( mac_out12.dataout[13..13], ( mac_out12.dataout[12..12], ( mac_out12.dataout[11..11], ( mac_out12.dataout[10..10], ( mac_out12.dataout[9..9], ( mac_out12.dataout[8..8], ( mac_out12.dataout[7..7], ( mac_out12.dataout[6..6], ( mac_out12.dataout[5..5], ( mac_out12.dataout[4..4], ( mac_out12.dataout[3..3], ( mac_out12.dataout[2..2], ( mac_out12.dataout[1..0])))))))))))))))))))))))))))))))))))))))))))))))))))))))))));
	sft39a[].in = ( w756w, ( w756w, ( w756w, ( w756w, ( w756w, ( w756w, ( w756w, ( w756w, ( w756w, ( w756w, ( w756w, ( w756w, ( w756w, ( sft36a[46..46].out, ( mac_out8.dataout[27..27], ( mac_out8.dataout[26..26], ( mac_out8.dataout[25..25], ( mac_out8.dataout[24..24], ( sft44a[23..23].out, ( sft44a[22..22].out, ( sft44a[21..21].out, ( sft44a[20..20].out, ( sft44a[19..19].out, ( sft44a[18..18].out, ( sft44a[17..17].out, ( sft44a[16..16].out, ( sft44a[15..15].out, ( sft44a[14..14].out, ( sft44a[13..13].out, ( sft44a[12..12].out, ( sft44a[11..11].out, ( sft44a[10..10].out, ( sft44a[9..9].out, ( sft44a[8..8].out, ( sft44a[7..7].out, ( sft44a[6..6].out, ( sft44a[5..5].out, ( sft44a[4..4].out, ( sft44a[3..3].out, ( sft44a[2..2].out, ( sft44a[1..1].out, ( sft44a[0..0].out, ( mac_out4.dataout[35..35], ( mac_out4.dataout[34..34], ( mac_out4.dataout[33..33], ( mac_out4.dataout[32..32], ( mac_out4.dataout[31..31], ( mac_out4.dataout[30..30], ( mac_out4.dataout[29..29], ( mac_out4.dataout[28..28], ( mac_out4.dataout[27..27], ( mac_out4.dataout[26..26], ( mac_out4.dataout[25..25], ( mac_out4.dataout[24..24], ( mac_out4.dataout[23..23], ( mac_out4.dataout[22..22], ( mac_out4.dataout[21..21], ( mac_out4.dataout[20..20], ( mac_out4.dataout[19..18])))))))))))))))))))))))))))))))))))))))))))))))))))))))))));
	sft40a[].in = add37_result[];
	sft42a[].in = ( w756w, ( mac_out20.dataout[22..22], ( mac_out20.dataout[21..21], ( mac_out20.dataout[20..20], ( mac_out20.dataout[19..19], ( mac_out20.dataout[18..18], ( mac_out14.dataout[17..17], ( mac_out14.dataout[16..16], ( mac_out14.dataout[15..15], ( mac_out14.dataout[14..14], ( mac_out14.dataout[13..13], ( mac_out14.dataout[12..12], ( mac_out14.dataout[11..11], ( mac_out14.dataout[10..10], ( mac_out14.dataout[9..9], ( mac_out14.dataout[8..8], ( mac_out14.dataout[7..7], ( mac_out14.dataout[6..6], ( mac_out14.dataout[5..5], ( mac_out20.dataout[4..4], ( mac_out20.dataout[3..3], ( mac_out20.dataout[2..2], ( mac_out20.dataout[1..0])))))))))))))))))))))));
	sft43a[].in = ( w756w, ( w756w, ( w756w, ( w756w, ( w756w, ( w756w, ( w756w, ( w756w, ( w756w, ( w756w, ( w756w, ( w756w, ( w756w, ( w756w, ( w756w, ( w756w, ( w756w, ( w756w, ( w756w, ( mac_out6.dataout[22..22], ( mac_out6.dataout[21..21], ( mac_out6.dataout[20..20], ( mac_out6.dataout[19..18])))))))))))))))))))))));
	sft44a[].in = add41_result[];
	result[104..0] = w1680w[104..0];
	w1680w[] = ( sft32a[87..86].out, sft32a[85..84].out, sft32a[83..82].out, sft32a[81..80].out, sft32a[79..78].out, sft32a[77..76].out, sft32a[75..74].out, sft32a[73..72].out, sft32a[71..70].out, sft32a[69..68].out, sft32a[67..66].out, sft32a[65..64].out, sft32a[63..62].out, sft32a[61..60].out, sft32a[59..58].out, sft32a[57..56].out, sft32a[55..54].out, sft32a[53..52].out, sft32a[51..50].out, sft32a[49..48].out, sft32a[47..46].out, sft32a[45..44].out, sft32a[43..42].out, sft32a[41..40].out, sft32a[39..38].out, sft32a[37..36].out, sft32a[35..34].out, sft32a[33..32].out, sft32a[31..30].out, sft32a[29..28].out, sft32a[27..26].out, sft32a[25..24].out, sft32a[23..22].out, sft32a[21..20].out, sft32a[19..18].out, sft32a[17..16].out, sft32a[15..14].out, sft32a[13..12].out, sft32a[11..10].out, sft32a[9..8].out, sft32a[7..6].out, sft32a[5..4].out, sft32a[3..2].out, sft32a[1..0].out, mac_out2.dataout[17..17], mac_out2.dataout[16..16], mac_out2.dataout[15..15], mac_out2.dataout[14..14], mac_out2.dataout[13..13], mac_out2.dataout[12..12], mac_out2.dataout[11..11], mac_out2.dataout[10..10], mac_out2.dataout[9..9], mac_out2.dataout[8..8], mac_out2.dataout[7..7], mac_out2.dataout[6..6], mac_out2.dataout[5..5], mac_out2.dataout[4..4], mac_out2.dataout[3..3], mac_out2.dataout[2..2], mac_out2.dataout[1..1], mac_out2.dataout[0..0]);
	w756w = B"0";
END;
--VALID FILE
