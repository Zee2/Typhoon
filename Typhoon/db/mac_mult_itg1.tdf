--alt_mac_mult DATAA_CLEAR="NONE" DATAA_CLOCK="NONE" DATAA_WIDTH=10 DATAB_CLEAR="NONE" DATAB_CLOCK="NONE" DATAB_WIDTH=9 MULT_CLEAR="NONE" MULT_CLOCK="NONE" MULT_INPUT_A_IS_CONSTANT="NO" MULT_INPUT_B_IS_CONSTANT="NO" MULT_PIPELINE=0 MULT_REPRESENTATION_A="UNSIGNED" MULT_REPRESENTATION_B="UNSIGNED" OUTPUT_CLEAR="NONE" OUTPUT_CLOCK="NONE" OUTPUT_WIDTH=19 SIGNA_CLEAR="NONE" SIGNA_CLOCK="NONE" SIGNB_CLEAR="NONE" SIGNB_CLOCK="NONE" dataa datab dataout signa signb CARRY_CHAIN="MANUAL" CARRY_CHAIN_LENGTH=48 DEVICE_FAMILY="Cyclone IV E"
--VERSION_BEGIN 18.0 cbx_alt_mac_mult 2018:04:24:18:04:18:SJ cbx_mgl 2018:04:24:18:08:49:SJ  VERSION_END


-- Copyright (C) 2018  Intel Corporation. All rights reserved.
--  Your use of Intel Corporation's design tools, logic functions 
--  and other software and tools, and its AMPP partner logic 
--  functions, and any output files from any of the foregoing 
--  (including device programming or simulation files), and any 
--  associated documentation or information are expressly subject 
--  to the terms and conditions of the Intel Program License 
--  Subscription Agreement, the Intel Quartus Prime License Agreement,
--  the Intel FPGA IP License Agreement, or other applicable license
--  agreement, including, without limitation, that your use is for
--  the sole purpose of programming logic devices manufactured by
--  Intel and sold by Intel or its authorized distributors.  Please
--  refer to the applicable agreement for further details.


FUNCTION mult_apl (dataa[9..0], datab[8..0])
RETURNS ( result[18..0]);

--synthesis_resources = lut 135 
SUBDESIGN mac_mult_itg1
( 
	dataa[9..0]	:	input;
	datab[8..0]	:	input;
	dataout[18..0]	:	output;
	signa	:	input;
	signb	:	input;
) 
VARIABLE 
	mult1 : mult_apl;
	tmp_dataout[18..0]	: WIRE;
	x_dataa[9..0]	: WIRE;
	x_datab[8..0]	: WIRE;
	x_output[18..0]	: WIRE;

BEGIN 
	mult1.dataa[] = x_dataa[];
	mult1.datab[] = x_datab[];
	dataout[] = tmp_dataout[];
	tmp_dataout[] = (x_output[] & (((signa # (! signa)) # signb) # (! signb)));
	x_dataa[] = ( dataa[]);
	x_datab[] = ( datab[]);
	x_output[18..0] = mult1.result[18..0];
END;
--VALID FILE
