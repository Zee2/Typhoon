--dcfifo_mixed_widths CARRY_CHAIN="MANUAL" CARRY_CHAIN_LENGTH=48 DEVICE_FAMILY="Cyclone IV E" IGNORE_CARRY_BUFFERS="OFF" LPM_NUMWORDS=16 LPM_SHOWAHEAD="ON" LPM_WIDTH=32 LPM_WIDTH_R=32 LPM_WIDTHU=4 LPM_WIDTHU_R=4 OVERFLOW_CHECKING="ON" RDSYNC_DELAYPIPE=3 UNDERFLOW_CHECKING="ON" USE_EAB="ON" WRSYNC_DELAYPIPE=3 data q rdclk rdempty rdreq wrclk wrfull wrreq CYCLONEII_M4K_COMPATIBILITY="ON" INTENDED_DEVICE_FAMILY="Cyclone IV E" LOW_POWER_MODE="AUTO" ALTERA_INTERNAL_OPTIONS=AUTO_SHIFT_REGISTER_RECOGNITION=OFF
--VERSION_BEGIN 18.0 cbx_a_gray2bin 2018:04:24:18:04:18:SJ cbx_a_graycounter 2018:04:24:18:04:18:SJ cbx_altdpram 2018:04:24:18:04:18:SJ cbx_altera_counter 2018:04:24:18:04:18:SJ cbx_altera_gray_counter 2018:04:24:18:04:18:SJ cbx_altera_syncram 2018:04:24:18:04:18:SJ cbx_altera_syncram_nd_impl 2018:04:24:18:04:18:SJ cbx_altsyncram 2018:04:24:18:04:18:SJ cbx_cycloneii 2018:04:24:18:04:18:SJ cbx_dcfifo 2018:04:24:18:04:18:SJ cbx_fifo_common 2018:04:24:18:04:18:SJ cbx_lpm_add_sub 2018:04:24:18:04:18:SJ cbx_lpm_compare 2018:04:24:18:04:18:SJ cbx_lpm_counter 2018:04:24:18:04:18:SJ cbx_lpm_decode 2018:04:24:18:04:18:SJ cbx_lpm_mux 2018:04:24:18:04:18:SJ cbx_mgl 2018:04:24:18:08:49:SJ cbx_nadder 2018:04:24:18:04:18:SJ cbx_scfifo 2018:04:24:18:04:18:SJ cbx_stratix 2018:04:24:18:04:18:SJ cbx_stratixii 2018:04:24:18:04:18:SJ cbx_stratixiii 2018:04:24:18:04:18:SJ cbx_stratixv 2018:04:24:18:04:18:SJ cbx_util_mgl 2018:04:24:18:04:18:SJ  VERSION_END


-- Copyright (C) 2018  Intel Corporation. All rights reserved.
--  Your use of Intel Corporation's design tools, logic functions 
--  and other software and tools, and its AMPP partner logic 
--  functions, and any output files from any of the foregoing 
--  (including device programming or simulation files), and any 
--  associated documentation or information are expressly subject 
--  to the terms and conditions of the Intel Program License 
--  Subscription Agreement, the Intel Quartus Prime License Agreement,
--  the Intel FPGA IP License Agreement, or other applicable license
--  agreement, including, without limitation, that your use is for
--  the sole purpose of programming logic devices manufactured by
--  Intel and sold by Intel or its authorized distributors.  Please
--  refer to the applicable agreement for further details.


FUNCTION a_graycounter_nn6 (clock, cnt_en)
RETURNS ( q[4..0]);
FUNCTION a_graycounter_j5c (clock, cnt_en)
RETURNS ( q[4..0]);
FUNCTION altsyncram_d421 (address_a[3..0], address_b[3..0], addressstall_b, clock0, clock1, data_a[31..0], wren_a)
RETURNS ( q_b[31..0]);
FUNCTION alt_synch_pipe_ip7 (clock, d[4..0])
RETURNS ( q[4..0]);
FUNCTION alt_synch_pipe_3u7 (clock, d[4..0])
RETURNS ( q[4..0]);
FUNCTION cmpr_966 (dataa[2..0], datab[2..0])
RETURNS ( aeb);
FUNCTION cmpr_866 (dataa[1..0], datab[1..0])
RETURNS ( aeb);
FUNCTION mux_j28 (data[1..0], sel[0..0])
RETURNS ( result[0..0]);

--synthesis_resources = M9K 1 reg 19 
OPTIONS ALTERA_INTERNAL_OPTION = "AUTO_SHIFT_REGISTER_RECOGNITION=OFF;REMOVE_DUPLICATE_REGISTERS=OFF;SYNCHRONIZER_IDENTIFICATION=OFF;SYNCHRONIZATION_REGISTER_CHAIN_LENGTH = 1;suppress_da_rule_internal=d101;suppress_da_rule_internal=d102;suppress_da_rule_internal=d103;{-to rdemp_eq_comp_lsb_aeb} POWER_UP_LEVEL=HIGH;{-to rdemp_eq_comp_msb_aeb} POWER_UP_LEVEL=HIGH;{-to wrptr_g} suppress_da_rule_internal=S102;{-to wrptr_g} POWER_UP_LEVEL=LOW";

SUBDESIGN dcfifo_egf1
( 
	data[31..0]	:	input;
	q[31..0]	:	output;
	rdclk	:	input;
	rdempty	:	output;
	rdreq	:	input;
	wrclk	:	input;
	wrfull	:	output;
	wrreq	:	input;
) 
VARIABLE 
	rdptr_g1p : a_graycounter_nn6;
	wrptr_g1p : a_graycounter_j5c;
	fifo_ram : altsyncram_d421;
	delayed_wrptr_g[4..0] : dffe;
	rdemp_eq_comp_lsb_aeb : dffe
		WITH (
			power_up = "high"
		);
	rdemp_eq_comp_msb_aeb : dffe
		WITH (
			power_up = "high"
		);
	rdptr_g[4..0] : dffe;
	wrfull_eq_comp_lsb_mux_reg : dffe;
	wrfull_eq_comp_msb_mux_reg : dffe;
	wrptr_g[4..0] : dffe
		WITH (
			power_up = "low"
		);
	rs_dgwp : alt_synch_pipe_ip7;
	ws_dgrp : alt_synch_pipe_3u7;
	rdempty_eq_comp1_lsb : cmpr_966;
	rdempty_eq_comp1_msb : cmpr_866;
	rdempty_eq_comp_lsb : cmpr_966;
	rdempty_eq_comp_msb : cmpr_866;
	wrfull_eq_comp1_lsb : cmpr_966;
	wrfull_eq_comp1_msb : cmpr_866;
	wrfull_eq_comp_lsb : cmpr_966;
	wrfull_eq_comp_msb : cmpr_866;
	rdemp_eq_comp_lsb_mux : mux_j28;
	rdemp_eq_comp_msb_mux : mux_j28;
	wrfull_eq_comp_lsb_mux : mux_j28;
	wrfull_eq_comp_msb_mux : mux_j28;
	int_rdempty	: WIRE;
	int_wrfull	: WIRE;
	ram_address_a[3..0]	: WIRE;
	ram_address_b[3..0]	: WIRE;
	valid_rdreq	: WIRE;
	valid_wrreq	: WIRE;
	wrptr_g1s[4..0]	: WIRE;
	wrptr_gs[4..0]	: WIRE;

BEGIN 
	rdptr_g1p.clock = rdclk;
	rdptr_g1p.cnt_en = valid_rdreq;
	wrptr_g1p.clock = wrclk;
	wrptr_g1p.cnt_en = valid_wrreq;
	fifo_ram.address_a[] = ram_address_a[];
	fifo_ram.address_b[] = ram_address_b[];
	fifo_ram.addressstall_b = (! valid_rdreq);
	fifo_ram.clock0 = wrclk;
	fifo_ram.clock1 = rdclk;
	fifo_ram.data_a[] = data[];
	fifo_ram.wren_a = valid_wrreq;
	delayed_wrptr_g[].clk = wrclk;
	delayed_wrptr_g[].d = wrptr_g[].q;
	rdemp_eq_comp_lsb_aeb.clk = rdclk;
	rdemp_eq_comp_lsb_aeb.d = rdemp_eq_comp_lsb_mux.result[];
	rdemp_eq_comp_msb_aeb.clk = rdclk;
	rdemp_eq_comp_msb_aeb.d = rdemp_eq_comp_msb_mux.result[];
	rdptr_g[].clk = rdclk;
	rdptr_g[].d = rdptr_g1p.q[];
	rdptr_g[].ena = valid_rdreq;
	wrfull_eq_comp_lsb_mux_reg.clk = wrclk;
	wrfull_eq_comp_lsb_mux_reg.d = wrfull_eq_comp_lsb_mux.result[];
	wrfull_eq_comp_msb_mux_reg.clk = wrclk;
	wrfull_eq_comp_msb_mux_reg.d = wrfull_eq_comp_msb_mux.result[];
	wrptr_g[].clk = wrclk;
	wrptr_g[].d = wrptr_g1p.q[];
	wrptr_g[].ena = valid_wrreq;
	rs_dgwp.clock = rdclk;
	rs_dgwp.d[] = delayed_wrptr_g[].q;
	ws_dgrp.clock = wrclk;
	ws_dgrp.d[] = rdptr_g[].q;
	rdempty_eq_comp1_lsb.dataa[2..0] = delayed_wrptr_g[2..0].q;
	rdempty_eq_comp1_lsb.datab[2..0] = rdptr_g1p.q[2..0];
	rdempty_eq_comp1_msb.dataa[1..0] = delayed_wrptr_g[4..3].q;
	rdempty_eq_comp1_msb.datab[1..0] = rdptr_g1p.q[4..3];
	rdempty_eq_comp_lsb.dataa[2..0] = delayed_wrptr_g[2..0].q;
	rdempty_eq_comp_lsb.datab[2..0] = rdptr_g[2..0].q;
	rdempty_eq_comp_msb.dataa[1..0] = delayed_wrptr_g[4..3].q;
	rdempty_eq_comp_msb.datab[1..0] = rdptr_g[4..3].q;
	wrfull_eq_comp1_lsb.dataa[2..0] = rdptr_g[2..0].q;
	wrfull_eq_comp1_lsb.datab[2..0] = wrptr_g1s[2..0];
	wrfull_eq_comp1_msb.dataa[1..0] = rdptr_g[4..3].q;
	wrfull_eq_comp1_msb.datab[1..0] = wrptr_g1s[4..3];
	wrfull_eq_comp_lsb.dataa[2..0] = rdptr_g[2..0].q;
	wrfull_eq_comp_lsb.datab[2..0] = wrptr_gs[2..0];
	wrfull_eq_comp_msb.dataa[1..0] = rdptr_g[4..3].q;
	wrfull_eq_comp_msb.datab[1..0] = wrptr_gs[4..3];
	rdemp_eq_comp_lsb_mux.data[] = ( rdempty_eq_comp1_lsb.aeb, rdempty_eq_comp_lsb.aeb);
	rdemp_eq_comp_lsb_mux.sel[] = valid_rdreq;
	rdemp_eq_comp_msb_mux.data[] = ( rdempty_eq_comp1_msb.aeb, rdempty_eq_comp_msb.aeb);
	rdemp_eq_comp_msb_mux.sel[] = valid_rdreq;
	wrfull_eq_comp_lsb_mux.data[] = ( wrfull_eq_comp1_lsb.aeb, wrfull_eq_comp_lsb.aeb);
	wrfull_eq_comp_lsb_mux.sel[] = valid_wrreq;
	wrfull_eq_comp_msb_mux.data[] = ( wrfull_eq_comp1_msb.aeb, wrfull_eq_comp_msb.aeb);
	wrfull_eq_comp_msb_mux.sel[] = valid_wrreq;
	int_rdempty = (rdemp_eq_comp_lsb_aeb.q & rdemp_eq_comp_msb_aeb.q);
	int_wrfull = (wrfull_eq_comp_lsb_mux_reg.q & wrfull_eq_comp_msb_mux_reg.q);
	q[] = fifo_ram.q_b[];
	ram_address_a[] = ( (wrptr_g[4..4].q $ wrptr_g[3..3].q), wrptr_g[2..0].q);
	ram_address_b[] = ( (rdptr_g1p.q[4..4] $ rdptr_g1p.q[3..3]), rdptr_g1p.q[2..0]);
	rdempty = int_rdempty;
	valid_rdreq = (rdreq & (! int_rdempty));
	valid_wrreq = (wrreq & (! int_wrfull));
	wrfull = int_wrfull;
	wrptr_g1s[] = ( (! wrptr_g1p.q[4..4]), (! wrptr_g1p.q[3..3]), wrptr_g1p.q[2..0]);
	wrptr_gs[] = ( (! wrptr_g[4..4].q), (! wrptr_g[3..3].q), wrptr_g[2..0].q);
END;
--VALID FILE
