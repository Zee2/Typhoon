vendor_name = ModelSim
source_file = 1, C:/Users/finnn/Documents/385/385_FPGA/Lab5/Synchronizers.sv
source_file = 1, C:/Users/finnn/Documents/385/385_FPGA/Lab5/HexDriver.sv
source_file = 1, C:/Users/finnn/Documents/385/385_FPGA/Lab5/adder_9.sv
source_file = 1, C:/Users/finnn/Documents/385/385_FPGA/Lab5/Reg_8.sv
source_file = 1, C:/Users/finnn/Documents/385/385_FPGA/Lab5/full_adder.sv
source_file = 1, C:/Users/finnn/Documents/385/385_FPGA/Lab5/multiplier_toplevel.sv
source_file = 1, C:/Users/finnn/Documents/385/385_FPGA/Lab5/control.sv
source_file = 1, C:/Users/finnn/Documents/385/385_FPGA/Lab5/testbench.sv
source_file = 1, C:/Users/finnn/Documents/385/385_FPGA/Lab5/db/multiplier_toplevel.cbx.xml
design_name = multiplier_toplevel
instance = comp, \AhexU[0]~output , AhexU[0]~output, multiplier_toplevel, 1
instance = comp, \AhexU[1]~output , AhexU[1]~output, multiplier_toplevel, 1
instance = comp, \AhexU[2]~output , AhexU[2]~output, multiplier_toplevel, 1
instance = comp, \AhexU[3]~output , AhexU[3]~output, multiplier_toplevel, 1
instance = comp, \AhexU[4]~output , AhexU[4]~output, multiplier_toplevel, 1
instance = comp, \AhexU[5]~output , AhexU[5]~output, multiplier_toplevel, 1
instance = comp, \AhexU[6]~output , AhexU[6]~output, multiplier_toplevel, 1
instance = comp, \AhexL[0]~output , AhexL[0]~output, multiplier_toplevel, 1
instance = comp, \AhexL[1]~output , AhexL[1]~output, multiplier_toplevel, 1
instance = comp, \AhexL[2]~output , AhexL[2]~output, multiplier_toplevel, 1
instance = comp, \AhexL[3]~output , AhexL[3]~output, multiplier_toplevel, 1
instance = comp, \AhexL[4]~output , AhexL[4]~output, multiplier_toplevel, 1
instance = comp, \AhexL[5]~output , AhexL[5]~output, multiplier_toplevel, 1
instance = comp, \AhexL[6]~output , AhexL[6]~output, multiplier_toplevel, 1
instance = comp, \BhexU[0]~output , BhexU[0]~output, multiplier_toplevel, 1
instance = comp, \BhexU[1]~output , BhexU[1]~output, multiplier_toplevel, 1
instance = comp, \BhexU[2]~output , BhexU[2]~output, multiplier_toplevel, 1
instance = comp, \BhexU[3]~output , BhexU[3]~output, multiplier_toplevel, 1
instance = comp, \BhexU[4]~output , BhexU[4]~output, multiplier_toplevel, 1
instance = comp, \BhexU[5]~output , BhexU[5]~output, multiplier_toplevel, 1
instance = comp, \BhexU[6]~output , BhexU[6]~output, multiplier_toplevel, 1
instance = comp, \BhexL[0]~output , BhexL[0]~output, multiplier_toplevel, 1
instance = comp, \BhexL[1]~output , BhexL[1]~output, multiplier_toplevel, 1
instance = comp, \BhexL[2]~output , BhexL[2]~output, multiplier_toplevel, 1
instance = comp, \BhexL[3]~output , BhexL[3]~output, multiplier_toplevel, 1
instance = comp, \BhexL[4]~output , BhexL[4]~output, multiplier_toplevel, 1
instance = comp, \BhexL[5]~output , BhexL[5]~output, multiplier_toplevel, 1
instance = comp, \BhexL[6]~output , BhexL[6]~output, multiplier_toplevel, 1
instance = comp, \Aval[0]~output , Aval[0]~output, multiplier_toplevel, 1
instance = comp, \Aval[1]~output , Aval[1]~output, multiplier_toplevel, 1
instance = comp, \Aval[2]~output , Aval[2]~output, multiplier_toplevel, 1
instance = comp, \Aval[3]~output , Aval[3]~output, multiplier_toplevel, 1
instance = comp, \Aval[4]~output , Aval[4]~output, multiplier_toplevel, 1
instance = comp, \Aval[5]~output , Aval[5]~output, multiplier_toplevel, 1
instance = comp, \Aval[6]~output , Aval[6]~output, multiplier_toplevel, 1
instance = comp, \Aval[7]~output , Aval[7]~output, multiplier_toplevel, 1
instance = comp, \Bval[0]~output , Bval[0]~output, multiplier_toplevel, 1
instance = comp, \Bval[1]~output , Bval[1]~output, multiplier_toplevel, 1
instance = comp, \Bval[2]~output , Bval[2]~output, multiplier_toplevel, 1
instance = comp, \Bval[3]~output , Bval[3]~output, multiplier_toplevel, 1
instance = comp, \Bval[4]~output , Bval[4]~output, multiplier_toplevel, 1
instance = comp, \Bval[5]~output , Bval[5]~output, multiplier_toplevel, 1
instance = comp, \Bval[6]~output , Bval[6]~output, multiplier_toplevel, 1
instance = comp, \Bval[7]~output , Bval[7]~output, multiplier_toplevel, 1
instance = comp, \X~output , X~output, multiplier_toplevel, 1
instance = comp, \Clk~input , Clk~input, multiplier_toplevel, 1
instance = comp, \Clk~inputclkctrl , Clk~inputclkctrl, multiplier_toplevel, 1
instance = comp, \Reset_USH~input , Reset_USH~input, multiplier_toplevel, 1
instance = comp, \button_sync[2]|q~0 , button_sync[2]|q~0, multiplier_toplevel, 1
instance = comp, \button_sync[2]|q , button_sync[2]|q, multiplier_toplevel, 1
instance = comp, \Run_USH~input , Run_USH~input, multiplier_toplevel, 1
instance = comp, \button_sync[0]|q~0 , button_sync[0]|q~0, multiplier_toplevel, 1
instance = comp, \button_sync[0]|q , button_sync[0]|q, multiplier_toplevel, 1
instance = comp, \ClearA_LoadB_USH~input , ClearA_LoadB_USH~input, multiplier_toplevel, 1
instance = comp, \button_sync[1]|q~0 , button_sync[1]|q~0, multiplier_toplevel, 1
instance = comp, \button_sync[1]|q , button_sync[1]|q, multiplier_toplevel, 1
instance = comp, \controller|Selector0~0 , controller|Selector0~0, multiplier_toplevel, 1
instance = comp, \controller|Add0~0 , controller|Add0~0, multiplier_toplevel, 1
instance = comp, \controller|Selector4~0 , controller|Selector4~0, multiplier_toplevel, 1
instance = comp, \controller|shiftCounter[0] , controller|shiftCounter[0], multiplier_toplevel, 1
instance = comp, \controller|Add0~2 , controller|Add0~2, multiplier_toplevel, 1
instance = comp, \controller|Selector3~0 , controller|Selector3~0, multiplier_toplevel, 1
instance = comp, \controller|shiftCounter[1] , controller|shiftCounter[1], multiplier_toplevel, 1
instance = comp, \controller|Add0~4 , controller|Add0~4, multiplier_toplevel, 1
instance = comp, \controller|Selector2~0 , controller|Selector2~0, multiplier_toplevel, 1
instance = comp, \controller|shiftCounter[2] , controller|shiftCounter[2], multiplier_toplevel, 1
instance = comp, \controller|Add0~6 , controller|Add0~6, multiplier_toplevel, 1
instance = comp, \controller|Selector1~0 , controller|Selector1~0, multiplier_toplevel, 1
instance = comp, \controller|shiftCounter[3] , controller|shiftCounter[3], multiplier_toplevel, 1
instance = comp, \controller|Add0~8 , controller|Add0~8, multiplier_toplevel, 1
instance = comp, \controller|Selector0~1 , controller|Selector0~1, multiplier_toplevel, 1
instance = comp, \controller|shiftCounter[4] , controller|shiftCounter[4], multiplier_toplevel, 1
instance = comp, \controller|Equal0~0 , controller|Equal0~0, multiplier_toplevel, 1
instance = comp, \controller|currentState~16 , controller|currentState~16, multiplier_toplevel, 1
instance = comp, \controller|currentState~17 , controller|currentState~17, multiplier_toplevel, 1
instance = comp, \controller|currentState.AddSubState , controller|currentState.AddSubState, multiplier_toplevel, 1
instance = comp, \controller|currentState~18 , controller|currentState~18, multiplier_toplevel, 1
instance = comp, \controller|currentState.ShiftState , controller|currentState.ShiftState, multiplier_toplevel, 1
instance = comp, \controller|currentState~21 , controller|currentState~21, multiplier_toplevel, 1
instance = comp, \controller|currentState~22 , controller|currentState~22, multiplier_toplevel, 1
instance = comp, \controller|currentState.HaltState , controller|currentState.HaltState, multiplier_toplevel, 1
instance = comp, \controller|currentState~19 , controller|currentState~19, multiplier_toplevel, 1
instance = comp, \controller|currentState~13 , controller|currentState~13, multiplier_toplevel, 1
instance = comp, \controller|currentState~14 , controller|currentState~14, multiplier_toplevel, 1
instance = comp, \controller|currentState.ClearLoadState , controller|currentState.ClearLoadState, multiplier_toplevel, 1
instance = comp, \controller|currentState~20 , controller|currentState~20, multiplier_toplevel, 1
instance = comp, \controller|currentState.StartState , controller|currentState.StartState, multiplier_toplevel, 1
instance = comp, \controller|currentState~15 , controller|currentState~15, multiplier_toplevel, 1
instance = comp, \controller|currentState.BeginCycleState , controller|currentState.BeginCycleState, multiplier_toplevel, 1
instance = comp, \S_USH[0]~input , S_USH[0]~input, multiplier_toplevel, 1
instance = comp, \switch_sync[0]|q , switch_sync[0]|q, multiplier_toplevel, 1
instance = comp, \S_USH[1]~input , S_USH[1]~input, multiplier_toplevel, 1
instance = comp, \switch_sync[1]|q , switch_sync[1]|q, multiplier_toplevel, 1
instance = comp, \S_USH[2]~input , S_USH[2]~input, multiplier_toplevel, 1
instance = comp, \switch_sync[2]|q , switch_sync[2]|q, multiplier_toplevel, 1
instance = comp, \S_USH[4]~input , S_USH[4]~input, multiplier_toplevel, 1
instance = comp, \switch_sync[4]|q , switch_sync[4]|q, multiplier_toplevel, 1
instance = comp, \S_USH[5]~input , S_USH[5]~input, multiplier_toplevel, 1
instance = comp, \switch_sync[5]|q , switch_sync[5]|q, multiplier_toplevel, 1
instance = comp, \S_USH[7]~input , S_USH[7]~input, multiplier_toplevel, 1
instance = comp, \switch_sync[7]|q , switch_sync[7]|q, multiplier_toplevel, 1
instance = comp, \controller|Sub~1 , controller|Sub~1, multiplier_toplevel, 1
instance = comp, \adderUnit|adderGenLoop[0].adder_i|Cout~2 , adderUnit|adderGenLoop[0].adder_i|Cout~2, multiplier_toplevel, 1
instance = comp, \adderUnit|comb~0 , adderUnit|comb~0, multiplier_toplevel, 1
instance = comp, \adderUnit|adderGenLoop[0].adder_i|Cout~0 , adderUnit|adderGenLoop[0].adder_i|Cout~0, multiplier_toplevel, 1
instance = comp, \adderUnit|adderGenLoop[0].adder_i|Cout~1 , adderUnit|adderGenLoop[0].adder_i|Cout~1, multiplier_toplevel, 1
instance = comp, \adderUnit|adderGenLoop[1].adder_i|S , adderUnit|adderGenLoop[1].adder_i|S, multiplier_toplevel, 1
instance = comp, \X~0 , X~0, multiplier_toplevel, 1
instance = comp, \S_USH[6]~input , S_USH[6]~input, multiplier_toplevel, 1
instance = comp, \switch_sync[6]|q , switch_sync[6]|q, multiplier_toplevel, 1
instance = comp, \controller|Sub~0 , controller|Sub~0, multiplier_toplevel, 1
instance = comp, \S_USH[3]~input , S_USH[3]~input, multiplier_toplevel, 1
instance = comp, \switch_sync[3]|q , switch_sync[3]|q, multiplier_toplevel, 1
instance = comp, \adderUnit|adderGenLoop[1].adder_i|Cout~0 , adderUnit|adderGenLoop[1].adder_i|Cout~0, multiplier_toplevel, 1
instance = comp, \adderUnit|adderGenLoop[2].adder_i|Cout~0 , adderUnit|adderGenLoop[2].adder_i|Cout~0, multiplier_toplevel, 1
instance = comp, \adderUnit|adderGenLoop[3].adder_i|Cout~0 , adderUnit|adderGenLoop[3].adder_i|Cout~0, multiplier_toplevel, 1
instance = comp, \adderUnit|adderGenLoop[4].adder_i|Cout~0 , adderUnit|adderGenLoop[4].adder_i|Cout~0, multiplier_toplevel, 1
instance = comp, \adderUnit|adderGenLoop[5].adder_i|Cout~0 , adderUnit|adderGenLoop[5].adder_i|Cout~0, multiplier_toplevel, 1
instance = comp, \adderUnit|adderGenLoop[6].adder_i|S , adderUnit|adderGenLoop[6].adder_i|S, multiplier_toplevel, 1
instance = comp, \regA|Data_Out~6 , regA|Data_Out~6, multiplier_toplevel, 1
instance = comp, \regA|Data_Out[7]~14 , regA|Data_Out[7]~14, multiplier_toplevel, 1
instance = comp, \regA|Data_Out[6] , regA|Data_Out[6], multiplier_toplevel, 1
instance = comp, \adderUnit|adderGenLoop[5].adder_i|S , adderUnit|adderGenLoop[5].adder_i|S, multiplier_toplevel, 1
instance = comp, \regA|Data_Out~5 , regA|Data_Out~5, multiplier_toplevel, 1
instance = comp, \regA|Data_Out[5] , regA|Data_Out[5], multiplier_toplevel, 1
instance = comp, \adderUnit|adderGenLoop[4].adder_i|S , adderUnit|adderGenLoop[4].adder_i|S, multiplier_toplevel, 1
instance = comp, \regA|Data_Out~4 , regA|Data_Out~4, multiplier_toplevel, 1
instance = comp, \regA|Data_Out[4] , regA|Data_Out[4], multiplier_toplevel, 1
instance = comp, \adderUnit|adderGenLoop[3].adder_i|S , adderUnit|adderGenLoop[3].adder_i|S, multiplier_toplevel, 1
instance = comp, \regA|Data_Out~13 , regA|Data_Out~13, multiplier_toplevel, 1
instance = comp, \regA|Data_Out[3] , regA|Data_Out[3], multiplier_toplevel, 1
instance = comp, \adderUnit|adderGenLoop[2].adder_i|S , adderUnit|adderGenLoop[2].adder_i|S, multiplier_toplevel, 1
instance = comp, \regA|Data_Out~12 , regA|Data_Out~12, multiplier_toplevel, 1
instance = comp, \regA|Data_Out[2] , regA|Data_Out[2], multiplier_toplevel, 1
instance = comp, \regA|Data_Out~11 , regA|Data_Out~11, multiplier_toplevel, 1
instance = comp, \regA|Data_Out[1] , regA|Data_Out[1], multiplier_toplevel, 1
instance = comp, \regA|Data_Out~9 , regA|Data_Out~9, multiplier_toplevel, 1
instance = comp, \regA|Data_Out~10 , regA|Data_Out~10, multiplier_toplevel, 1
instance = comp, \regA|Data_Out[0] , regA|Data_Out[0], multiplier_toplevel, 1
instance = comp, \regB|Data_Out~4 , regB|Data_Out~4, multiplier_toplevel, 1
instance = comp, \regB|Data_Out[7]~1 , regB|Data_Out[7]~1, multiplier_toplevel, 1
instance = comp, \regB|Data_Out[7] , regB|Data_Out[7], multiplier_toplevel, 1
instance = comp, \regB|Data_Out~3 , regB|Data_Out~3, multiplier_toplevel, 1
instance = comp, \regB|Data_Out[6] , regB|Data_Out[6], multiplier_toplevel, 1
instance = comp, \regB|Data_Out~2 , regB|Data_Out~2, multiplier_toplevel, 1
instance = comp, \regB|Data_Out[5] , regB|Data_Out[5], multiplier_toplevel, 1
instance = comp, \regB|Data_Out~0 , regB|Data_Out~0, multiplier_toplevel, 1
instance = comp, \regB|Data_Out[4] , regB|Data_Out[4], multiplier_toplevel, 1
instance = comp, \regB|Data_Out~8 , regB|Data_Out~8, multiplier_toplevel, 1
instance = comp, \regB|Data_Out[3] , regB|Data_Out[3], multiplier_toplevel, 1
instance = comp, \regB|Data_Out~7 , regB|Data_Out~7, multiplier_toplevel, 1
instance = comp, \regB|Data_Out[2] , regB|Data_Out[2], multiplier_toplevel, 1
instance = comp, \regB|Data_Out~6 , regB|Data_Out~6, multiplier_toplevel, 1
instance = comp, \regB|Data_Out[1] , regB|Data_Out[1], multiplier_toplevel, 1
instance = comp, \regB|Data_Out~5 , regB|Data_Out~5, multiplier_toplevel, 1
instance = comp, \regB|Data_Out[0] , regB|Data_Out[0], multiplier_toplevel, 1
instance = comp, \X~1 , X~1, multiplier_toplevel, 1
instance = comp, \adderUnit|adderGenLoop[8].adder_i|S~0 , adderUnit|adderGenLoop[8].adder_i|S~0, multiplier_toplevel, 1
instance = comp, \adderUnit|adderGenLoop[6].adder_i|Cout~0 , adderUnit|adderGenLoop[6].adder_i|Cout~0, multiplier_toplevel, 1
instance = comp, \adderUnit|adderGenLoop[7].adder_i|Cout~0 , adderUnit|adderGenLoop[7].adder_i|Cout~0, multiplier_toplevel, 1
instance = comp, \X~2 , X~2, multiplier_toplevel, 1
instance = comp, \X~reg0 , X~reg0, multiplier_toplevel, 1
instance = comp, \regA|Data_Out~7 , regA|Data_Out~7, multiplier_toplevel, 1
instance = comp, \regA|Data_Out~8 , regA|Data_Out~8, multiplier_toplevel, 1
instance = comp, \regA|Data_Out[7] , regA|Data_Out[7], multiplier_toplevel, 1
instance = comp, \hdAU|WideOr6~0 , hdAU|WideOr6~0, multiplier_toplevel, 1
instance = comp, \hdAU|WideOr5~0 , hdAU|WideOr5~0, multiplier_toplevel, 1
instance = comp, \hdAU|WideOr4~0 , hdAU|WideOr4~0, multiplier_toplevel, 1
instance = comp, \hdAU|WideOr3~0 , hdAU|WideOr3~0, multiplier_toplevel, 1
instance = comp, \hdAU|WideOr2~0 , hdAU|WideOr2~0, multiplier_toplevel, 1
instance = comp, \hdAU|WideOr1~0 , hdAU|WideOr1~0, multiplier_toplevel, 1
instance = comp, \hdAU|WideOr0~0 , hdAU|WideOr0~0, multiplier_toplevel, 1
instance = comp, \hdAL|WideOr6~0 , hdAL|WideOr6~0, multiplier_toplevel, 1
instance = comp, \hdAL|WideOr5~0 , hdAL|WideOr5~0, multiplier_toplevel, 1
instance = comp, \hdAL|WideOr4~0 , hdAL|WideOr4~0, multiplier_toplevel, 1
instance = comp, \hdAL|WideOr3~0 , hdAL|WideOr3~0, multiplier_toplevel, 1
instance = comp, \hdAL|WideOr2~0 , hdAL|WideOr2~0, multiplier_toplevel, 1
instance = comp, \hdAL|WideOr1~0 , hdAL|WideOr1~0, multiplier_toplevel, 1
instance = comp, \hdAL|WideOr0~0 , hdAL|WideOr0~0, multiplier_toplevel, 1
instance = comp, \hdBU|WideOr6~0 , hdBU|WideOr6~0, multiplier_toplevel, 1
instance = comp, \hdBU|WideOr5~0 , hdBU|WideOr5~0, multiplier_toplevel, 1
instance = comp, \hdBU|WideOr4~0 , hdBU|WideOr4~0, multiplier_toplevel, 1
instance = comp, \hdBU|WideOr3~0 , hdBU|WideOr3~0, multiplier_toplevel, 1
instance = comp, \hdBU|WideOr2~0 , hdBU|WideOr2~0, multiplier_toplevel, 1
instance = comp, \hdBU|WideOr1~0 , hdBU|WideOr1~0, multiplier_toplevel, 1
instance = comp, \hdBU|WideOr0~0 , hdBU|WideOr0~0, multiplier_toplevel, 1
instance = comp, \hdBL|WideOr6~0 , hdBL|WideOr6~0, multiplier_toplevel, 1
instance = comp, \hdBL|WideOr5~0 , hdBL|WideOr5~0, multiplier_toplevel, 1
instance = comp, \hdBL|WideOr4~0 , hdBL|WideOr4~0, multiplier_toplevel, 1
instance = comp, \hdBL|WideOr3~0 , hdBL|WideOr3~0, multiplier_toplevel, 1
instance = comp, \hdBL|WideOr2~0 , hdBL|WideOr2~0, multiplier_toplevel, 1
instance = comp, \hdBL|WideOr1~0 , hdBL|WideOr1~0, multiplier_toplevel, 1
instance = comp, \hdBL|WideOr0~0 , hdBL|WideOr0~0, multiplier_toplevel, 1
design_name = hard_block
instance = comp, \~ALTERA_ASDO_DATA1~~ibuf , ~ALTERA_ASDO_DATA1~~ibuf, hard_block, 1
instance = comp, \~ALTERA_FLASH_nCE_nCSO~~ibuf , ~ALTERA_FLASH_nCE_nCSO~~ibuf, hard_block, 1
instance = comp, \~ALTERA_DATA0~~ibuf , ~ALTERA_DATA0~~ibuf, hard_block, 1
